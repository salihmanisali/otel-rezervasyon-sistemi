spring.application.name=notification-service
# Server configuration
server.port=8082
# Kafka configuration
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.group-id=notification-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.otel.common.event
spring.kafka.consumer.properties.spring.json.value.default.type=com.otel.common.event.ReservationCreatedEvent
spring.kafka.topic.reservation-created=reservation-created
# Logging configuration
logging.level.org.springframework=INFO
logging.level.com.otel.notificationservice=DEBUG
# Swagger/OpenAPI configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
# OpenAPI Info
openapi.info.title=Notification Service API
openapi.info.description=API for managing notifications
openapi.info.version=1.0.0
openapi.info.contact.name=Notification Service Team
openapi.info.contact.email=notification@example.com
